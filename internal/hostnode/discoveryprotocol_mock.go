// Code generated by MockGen. DO NOT EDIT.
// Source: internal/hostnode/discoveryprotocol.go

// Package hostnode is a generated GoMock package.
package hostnode

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDiscoveryProtocol is a mock of DiscoveryProtocol interface
type MockDiscoveryProtocol struct {
	ctrl     *gomock.Controller
	recorder *MockDiscoveryProtocolMockRecorder
}

// MockDiscoveryProtocolMockRecorder is the mock recorder for MockDiscoveryProtocol
type MockDiscoveryProtocolMockRecorder struct {
	mock *MockDiscoveryProtocol
}

// NewMockDiscoveryProtocol creates a new mock instance
func NewMockDiscoveryProtocol(ctrl *gomock.Controller) *MockDiscoveryProtocol {
	mock := &MockDiscoveryProtocol{ctrl: ctrl}
	mock.recorder = &MockDiscoveryProtocolMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDiscoveryProtocol) EXPECT() *MockDiscoveryProtocolMockRecorder {
	return m.recorder
}

// Start mocks base method
func (m *MockDiscoveryProtocol) Start() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start
func (mr *MockDiscoveryProtocolMockRecorder) Start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockDiscoveryProtocol)(nil).Start))
}
